
    - name: Creating a module container file with content
      copy:
        dest: "/etc/modules-load.d/containerd.conf"
        content: |
          overlay
          br_netfilter

    - name: adding overlay modules
      modprobe:
        name: overlay
        state: present

    - name: adding br_netfilter modules
      modprobe:
        name: br_netfilter
        state: present

    - name: Creating a kubernetes file with content
      copy:
        dest: "/etc/sysctl.d/99-kubernetes-cri.conf"
        content: |
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
          net.bridge.bridge-nf-call-ip6tables = 1

    - name: a command to read the new added kernel modules
      command: sysctl --system

    - name: Update apt-get repo and cache
      apt:
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600


    - name: Ansible apt install containerd
      apt:
        name: containerd
        state: present

    - name: a command to configure containerd
      command: containerd config default | sudo tee /etc/containerd/config.toml

    - name: restart service containerd on ubuntu, in all cases, also issue daemon-reload to pick up config changes
      systemd:
        state: restarted
        daemon_reload: yes
        name: containerd
        enabled: yes

    - name: a command to turn off swap
      command: swapoff -a

    - name: a command to remove swap from fstab mounted filesystem files
      command: sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

    - name: Update apt-get repo and cache
      apt:
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600

    - name: Installing apt packages
      apt:
        pkg: ['apt-transport-https', 'curl']

    - name: Add an Apt signing key, uses whichever key is at the URL
      shell: curl -fsSL {{ k8s_url_apt_key }} | gpg --dearmor -o {{ k8s_gpgpath }}
      args:
        creates: "{{ k8s_gpgpath }}"


    - name: Add k8s repository
      apt_repository:
        repo: "deb [signed-by={{ k8s_gpgpath }}] {{ k8s_repository }} /"
        state: present
        filename: kubernetes
        update_cache: yes

    - name: Update apt-get repo and cache
      apt:
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600

    - name: Installing apt packages
      package: name={{ item }} state=present force=yes install_recommends=no
      loop: "{{ k8s_packages }}"

    - name: test2
      shell: |
        sudo swapoff -a
        sudo kubeadm join {{ ansible_env.KUBE_IP }}:6443 --token "{{ lookup('cypher','secret=secret/K8S_TOKEN') }}" --discovery-token-unsafe-skip-ca-verification --ignore-preflight-errors=All

